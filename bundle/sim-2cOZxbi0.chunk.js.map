{"version":3,"file":"sim-2cOZxbi0.chunk.js","sources":["../../../ui/paladin/holy/presets.ts","../../../ui/paladin/holy/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils.js';\nimport { Consumes, Flask, Food, Potions } from '../../core/proto/common.js';\nimport { HolyPaladin_Options as HolyPaladinOptions, PaladinAura, PaladinJudgement, PaladinMajorGlyph, PaladinMinorGlyph } from '../../core/proto/paladin.js';\nimport { SavedTalents } from '../../core/proto/ui.js';\nimport P1Gear from './gear_sets/p1.gear.json';\nimport P2Gear from './gear_sets/p2.gear.json';\nimport P3Gear from './gear_sets/p3.gear.json';\nimport P4Gear from './gear_sets/p4.gear.json';\nimport PreraidGear from './gear_sets/preraid.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('PreRaid', PreraidGear);\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nexport const P3_PRESET = PresetUtils.makePresetGear('P3 Preset', P3Gear);\nexport const P4_PRESET = PresetUtils.makePresetGear('P4 Preset', P4Gear);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/cata/talent-calc and copy the numbers in the url.\n\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '50350151020013053100515221-50023131203',\n\t\t// glyphs: {\n\t\t// \tmajor1: PaladinMajorGlyph.GlyphOfHolyLight,\n\t\t// \tmajor2: PaladinMajorGlyph.GlyphOfSealOfWisdom,\n\t\t// \tmajor3: PaladinMajorGlyph.GlyphOfBeaconOfLight,\n\t\t// \tminor2: PaladinMinorGlyph.GlyphOfLayOnHands,\n\t\t// \tminor1: PaladinMinorGlyph.GlyphOfSenseUndead,\n\t\t// \tminor3: PaladinMinorGlyph.GlyphOfBlessingOfKings,\n\t\t// },\n\t}),\n};\n\nexport const DefaultOptions = HolyPaladinOptions.create({\n\tclassOptions: {\n\t\taura: PaladinAura.DevotionAura,\n\t\tjudgement: PaladinJudgement.NoJudgement,\n\t},\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.MythicalManaPotion,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n});\n","import * as OtherInputs from '../../core/components/other_inputs.js';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui.js';\nimport { Player } from '../../core/player.js';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl.js';\nimport { Debuffs, Faction, IndividualBuffs, PartyBuffs, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../../core/proto/common.js';\nimport { Stats } from '../../core/proto_utils/stats.js';\nimport * as PaladinInputs from '../inputs.js';\n// import * as HolyInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecHolyPaladin, {\n\tcssClass: 'holy-paladin-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Paladin),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [Stat.StatIntellect, Stat.StatSpirit, Stat.StatSpellPower, Stat.StatSpellCrit, Stat.StatSpellHaste, Stat.StatMP5],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P1_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.38,\n\t\t\t[Stat.StatSpirit]: 0.34,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.69,\n\t\t\t[Stat.StatSpellHaste]: 0.77,\n\t\t\t[Stat.StatMP5]: 0.0,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\tarcaneBrilliance: true,\n\t\t\tunleashedRage: true,\n\t\t\tleaderOfThePack: TristateEffect.TristateEffectRegular,\n\t\t\ticyTalons: true,\n\t\t\ttotemOfWrath: true,\n\t\t\tdemonicPactSp: 500,\n\t\t\tswiftRetribution: true,\n\t\t\tmoonkinAura: TristateEffect.TristateEffectRegular,\n\t\t\tsanctifiedRetribution: true,\n\t\t\tmanaSpringTotem: TristateEffect.TristateEffectRegular,\n\t\t\tbloodlust: true,\n\t\t\tthorns: TristateEffect.TristateEffectImproved,\n\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\n\t\t\tshadowProtection: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfSanctuary: true,\n\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tjudgementOfWisdom: true,\n\t\t\tjudgementOfLight: true,\n\t\t\tmisery: true,\n\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\tebonPlaguebringer: true,\n\t\t\ttotemOfWrath: true,\n\t\t\tshadowMastery: true,\n\t\t\tbloodFrenzy: true,\n\t\t\tmangle: true,\n\t\t\texposeArmor: true,\n\t\t\tsunderArmor: true,\n\t\t\tvindication: true,\n\t\t\tthunderClap: TristateEffect.TristateEffectImproved,\n\t\t\tinsectSwarm: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [PaladinInputs.AuraSelection(), PaladinInputs.JudgementSelection()],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [OtherInputs.TankAssignment, OtherInputs.InspirationUptime],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.StandardTalents],\n\t\trotations: [],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [Presets.PRERAID_PRESET, Presets.P1_PRESET, Presets.P2_PRESET, Presets.P3_PRESET, Presets.P4_PRESET],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecHolyPaladin>): APLRotation => {\n\t\treturn APLRotation.create();\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecHolyPaladin,\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceBloodElf,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class HolyPaladinSimUI extends IndividualSimUI<Spec.SpecHolyPaladin> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecHolyPaladin>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET","P3Gear","P4_PRESET","P4Gear","StandardTalents","name","data","SavedTalents","create","DefaultOptions","HolyPaladinOptions","classOptions","aura","PaladinAura","DevotionAura","judgement","PaladinJudgement","NoJudgement","DefaultConsumes","Consumes","defaultPotion","Potions","MythicalManaPotion","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","SPEC_CONFIG","registerSpecConfig","Spec","SpecHolyPaladin","cssClass","cssScheme","PlayerClasses","getCssClass","Paladin","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","unleashedRage","leaderOfThePack","TristateEffectRegular","icyTalons","totemOfWrath","demonicPactSp","swiftRetribution","moonkinAura","sanctifiedRetribution","manaSpringTotem","bloodlust","thorns","devotionAura","shadowProtection","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfSanctuary","blessingOfWisdom","blessingOfMight","debuffs","Debuffs","judgementOfWisdom","judgementOfLight","misery","faerieFire","ebonPlaguebringer","shadowMastery","bloodFrenzy","mangle","exposeArmor","sunderArmor","vindication","thunderClap","insectSwarm","playerIconInputs","PaladinInputs.AuraSelection","PaladinInputs.JudgementSelection","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.InspirationUptime","encounterPicker","showExecuteProportion","presets","rotations","Presets.PRERAID_PRESET","Presets.P2_PRESET","Presets.P3_PRESET","Presets.P4_PRESET","autoRotation","_player","APLRotation","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceBloodElf","defaultGear","HolyPaladinSimUI","IndividualSimUI","constructor","parentElem","player","super"],"mappings":"y4EAcaA,EAAiBC,EAA2B,6dAC5CC,EAAYD,EAA2B,YAAaE,GACpDC,EAAYH,EAA2B,YAAaI,GACpDC,EAAYL,EAA2B,YAAaM,GACpDC,EAAYP,EAA2B,YAAaQ,GAKpDC,EAAkB,CAC9BC,KAAM,WACNC,KAAMC,EAAaC,OAAO,CAAA,IAadC,EAAiBC,EAAmBF,OAAO,CACvDG,aAAc,CACbC,KAAMC,EAAYC,aAClBC,UAAWC,EAAiBC,eAIjBC,EAAkBC,EAASX,OAAO,CAC9CY,cAAeC,EAAQC,mBACvBC,MAAOC,EAAMC,oBACbC,KAAMC,EAAKC,gBCrCNC,EAAcC,EAAmBC,EAAKC,gBAAiB,CAC5DC,SAAU,sBACVC,UAAWC,EAAcC,YAAYD,EAAcE,SAEnDC,YAAa,GAGbC,QAAS,CAACC,EAAKC,cAAeD,EAAKE,WAAYF,EAAKG,eAAgBH,EAAKI,cAAeJ,EAAKK,eAAgBL,EAAKM,SAElHC,gBAAiBP,EAAKG,eAEtBK,aAAc,CACbR,EAAKS,WACLT,EAAKU,SACLV,EAAKW,YACLX,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,cACLJ,EAAKK,eACLL,EAAKM,SAENM,SAAU,CAETC,KAAMC,EAAkBD,KAExBE,UAAWC,EAAMC,QAAQ,CACxB,CAACjB,EAAKC,eAAgB,IACtB,CAACD,EAAKE,YAAa,IACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,eAAgB,IACtB,CAACJ,EAAKK,gBAAiB,IACvB,CAACL,EAAKM,SAAU,IAGjBY,SAAUC,EAEVC,QAASC,EAAwBvD,KAEjCwD,YAAaC,EAEbC,UAAWC,EAAUzD,OAAO,CAC3B0D,cAAeC,EAAeC,uBAC9BC,mBAAoBF,EAAeC,uBACnCE,qBAAsBH,EAAeC,uBACrCG,kBAAkB,EAClBC,eAAe,EACfC,gBAAiBN,EAAeO,sBAChCC,WAAW,EACXC,cAAc,EACdC,cAAe,IACfC,kBAAkB,EAClBC,YAAaZ,EAAeO,sBAC5BM,uBAAuB,EACvBC,gBAAiBd,EAAeO,sBAChCQ,WAAW,EACXC,OAAQhB,EAAeC,uBACvBgB,aAAcjB,EAAeC,uBAC7BiB,kBAAkB,IAEnBC,WAAYC,EAAW/E,OAAO,IAC9BgF,gBAAiBC,EAAgBjF,OAAO,CACvCkF,iBAAiB,EACjBC,qBAAqB,EACrBC,iBAAkBzB,EAAeC,uBACjCyB,gBAAiB1B,EAAeC,yBAEjC0B,QAASC,EAAQvF,OAAO,CACvBwF,mBAAmB,EACnBC,kBAAkB,EAClBC,QAAQ,EACRC,WAAYhC,EAAeC,uBAC3BgC,mBAAmB,EACnBxB,cAAc,EACdyB,eAAe,EACfC,aAAa,EACbC,QAAQ,EACRC,aAAa,EACbC,aAAa,EACbC,aAAa,EACbC,YAAaxC,EAAeC,uBAC5BwC,aAAa,KAKfC,iBAAkB,CAACC,IAA+BC,KAElDC,wBAAyB,GACzBC,wBAAyB,GAEzBC,YAAa,CACZC,OAAQ,CAACC,EAA4BC,IAEtCC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAER5D,QAAS,CAACC,GACV4D,UAAW,GAEXpE,KAAM,CAACqE,EAAwBpE,EAAmBqE,EAAmBC,EAAmBC,IAGzFC,aAAeC,GACPC,EAAYxH,SAGpByH,eAAgB,CACf,CACCC,KAAMnG,EAAKC,gBACX4B,QAASC,EAAwBvD,KACjCwD,YAAaC,EACbL,SAAUC,EACVwE,oBAAqB,CACpB,CAACC,EAAQC,SAAUC,EAAKC,YACxB,CAACH,EAAQI,UAAWF,EAAKG,UACzB,CAACL,EAAQM,OAAQJ,EAAKK,cAEvBC,YAAa,CACZ,CAACR,EAAQC,SAAU,CAAC,EACpB,CAACD,EAAQI,UAAW,CACnB,EAAGlF,EAAkBD,KACrB,EAAGsE,EAAkBtE,KACrB,EAAGuE,EAAkBvE,KACrB,EAAGwE,EAAkBxE,MAEtB,CAAC+E,EAAQM,OAAQ,CAChB,EAAGpF,EAAkBD,KACrB,EAAGsE,EAAkBtE,KACrB,EAAGuE,EAAkBvE,KACrB,EAAGwE,EAAkBxE,WAOnB,MAAMwF,UAAyBC,EACrC,WAAAC,CAAYC,EAAyBC,GAC9BC,MAAAF,EAAYC,EAAQpH,EAC3B"}