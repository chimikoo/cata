{"version":3,"file":"sim-C4unVNfb.chunk.js","sources":["../../../ui/death_knight/unholy/presets.ts","../../../ui/death_knight/unholy/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils';\nimport { Consumes, Explosive, Flask, Food, Glyphs, PetFood, Potions, UnitReference } from '../../core/proto/common';\nimport { DeathKnightMajorGlyph, DeathKnightMinorGlyph, UnholyDeathKnight_Options } from '../../core/proto/death_knight';\nimport { SavedTalents } from '../../core/proto/ui';\nimport Uh2hSsApl from './apls/uh_2h_ss.apl.json';\nimport UhDndAoeApl from './apls/uh_dnd_aoe.apl.json';\nimport UhDwSsApl from './apls/unholy_dw_ss.apl.json';\nimport P1Uh2hGear from './gear_sets/p1_uh_2h.gear.json';\nimport P1UhDwGear from './gear_sets/p1_uh_dw.gear.json';\nimport P2UhDwGear from './gear_sets/p2_uh_dw.gear.json';\nimport P3UhDwGear from './gear_sets/p3_uh_dw.gear.json';\nimport P4Uh2hGear from './gear_sets/p4_uh_2h.gear.json';\nimport P4UhDwGear from './gear_sets/p4_uh_dw.gear.json';\nimport PreraidUh2hGear from './gear_sets/preraid_uh_2h.gear.json';\nimport PreraidUhDwGear from './gear_sets/preraid_uh_dw.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_UNHOLY_2H_PRESET = PresetUtils.makePresetGear('Pre-Raid 2H Unholy', PreraidUh2hGear);\nexport const P1_UNHOLY_2H_PRESET = PresetUtils.makePresetGear('P1 2H Unholy', P1Uh2hGear);\nexport const P4_UNHOLY_2H_PRESET = PresetUtils.makePresetGear('P4 2H Unholy', P4Uh2hGear);\nexport const PRERAID_UNHOLY_DW_PRESET = PresetUtils.makePresetGear('Pre-Raid DW Unholy', PreraidUhDwGear);\nexport const P1_UNHOLY_DW_PRESET = PresetUtils.makePresetGear('P1 DW Unholy', P1UhDwGear);\nexport const P2_UNHOLY_DW_PRESET = PresetUtils.makePresetGear('P2 DW Unholy', P2UhDwGear);\nexport const P3_UNHOLY_DW_PRESET = PresetUtils.makePresetGear('P3 DW Unholy', P3UhDwGear);\nexport const P4_UNHOLY_DW_PRESET = PresetUtils.makePresetGear('P4 DW Unholy', P4UhDwGear);\n\nexport const UNHOLY_DW_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Unholy DW SS', UhDwSsApl);\nexport const UNHOLY_2H_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Unholy 2H SS', Uh2hSsApl);\nexport const UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Unholy DND AOE', UhDndAoeApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wotlk.wowhead.com/talent-calc and copy the numbers in the url.\n\nexport const UnholyDualWieldTalents = {\n\tname: 'Unholy DW',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '-320043500002-2300303050032152000150013133051',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: DeathKnightMajorGlyph.GlyphOfTheGhoul,\n\t\t// \tmajor2: DeathKnightMajorGlyph.GlyphOfIcyTouch,\n\t\t// \tmajor3: DeathKnightMajorGlyph.GlyphOfDeathAndDecay,\n\t\t// \tminor1: DeathKnightMinorGlyph.GlyphOfHornOfWinter,\n\t\t// \tminor2: DeathKnightMinorGlyph.GlyphOfPestilence,\n\t\t// \tminor3: DeathKnightMinorGlyph.GlyphOfRaiseDead,\n\t\t// }),\n\t}),\n};\n\nexport const UnholyDualWieldSSTalents = {\n\tname: 'Unholy DW SS',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '-320033500002-2301303050032151000150013133151',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: DeathKnightMajorGlyph.GlyphOfTheGhoul,\n\t\t// \tmajor2: DeathKnightMajorGlyph.GlyphOfIcyTouch,\n\t\t// \tmajor3: DeathKnightMajorGlyph.GlyphOfDeathAndDecay,\n\t\t// \tminor1: DeathKnightMinorGlyph.GlyphOfHornOfWinter,\n\t\t// \tminor2: DeathKnightMinorGlyph.GlyphOfPestilence,\n\t\t// \tminor3: DeathKnightMinorGlyph.GlyphOfRaiseDead,\n\t\t// }),\n\t}),\n};\n\nexport const Unholy2HTalents = {\n\tname: 'Unholy 2H',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '-320050500002-2302003350032052000150013133151',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: DeathKnightMajorGlyph.GlyphOfTheGhoul,\n\t\t// \tmajor2: DeathKnightMajorGlyph.GlyphOfIcyTouch,\n\t\t// \tmajor3: DeathKnightMajorGlyph.GlyphOfDarkDeath,\n\t\t// \tminor1: DeathKnightMinorGlyph.GlyphOfHornOfWinter,\n\t\t// \tminor2: DeathKnightMinorGlyph.GlyphOfPestilence,\n\t\t// \tminor3: DeathKnightMinorGlyph.GlyphOfRaiseDead,\n\t\t// }),\n\t}),\n};\n\nexport const UnholyAoeTalents = {\n\tname: 'Unholy AOE',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '-320050500002-2302303050032052000150013133151',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: DeathKnightMajorGlyph.GlyphOfTheGhoul,\n\t\t// \tmajor2: DeathKnightMajorGlyph.GlyphOfIcyTouch,\n\t\t// \tmajor3: DeathKnightMajorGlyph.GlyphOfDeathAndDecay,\n\t\t// \tminor1: DeathKnightMinorGlyph.GlyphOfHornOfWinter,\n\t\t// \tminor2: DeathKnightMinorGlyph.GlyphOfPestilence,\n\t\t// \tminor3: DeathKnightMinorGlyph.GlyphOfRaiseDead,\n\t\t// }),\n\t}),\n};\n\nexport const DefaultUnholyOptions = UnholyDeathKnight_Options.create({\n\tclassOptions: {\n\t\tstartingRunicPower: 0,\n\t\tpetUptime: 1,\n\t},\n\tunholyFrenzyTarget: UnitReference.create(),\n});\n\nexport const OtherDefaults = {};\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfEndlessRage,\n\tfood: Food.FoodDragonfinFilet,\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tpetFood: PetFood.PetFoodSpicedMammothTreats,\n\tprepopPotion: Potions.PotionOfSpeed,\n\tthermalSapper: true,\n\tfillerExplosive: Explosive.ExplosiveSaroniteBomb,\n});\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs';\nimport * as OtherInputs from '../../core/components/other_inputs';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui';\nimport { Player } from '../../core/player';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl';\nimport {\n\tDebuffs,\n\tFaction,\n\tHandType,\n\tIndividualBuffs,\n\tItemSlot,\n\tPartyBuffs,\n\tPseudoStat,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect,\n} from '../../core/proto/common';\nimport { Stats } from '../../core/proto_utils/stats';\nimport * as DeathKnightInputs from '../inputs';\nimport * as UnholyInputs from './inputs';\nimport * as Presets from './presets';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecUnholyDeathKnight, {\n\tcssClass: 'unholy-death-knight-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.DeathKnight),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStrength,\n\t\tStat.StatArmor,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t],\n\tepPseudoStats: [PseudoStat.PseudoStatMainHandDps, PseudoStat.PseudoStatOffHandDps],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatArmor,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatExpertise,\n\t],\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P2_UNHOLY_DW_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap(\n\t\t\t{\n\t\t\t\t[Stat.StatStrength]: 3.22,\n\t\t\t\t[Stat.StatAgility]: 0.62,\n\t\t\t\t[Stat.StatArmor]: 0.01,\n\t\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t\t[Stat.StatExpertise]: 1.13,\n\t\t\t\t[Stat.StatMeleeHaste]: 1.85,\n\t\t\t\t[Stat.StatMeleeHit]: 1.92,\n\t\t\t\t[Stat.StatMeleeCrit]: 0.76,\n\t\t\t\t[Stat.StatArmorPenetration]: 0.77,\n\t\t\t\t[Stat.StatSpellHit]: 0.8,\n\t\t\t\t[Stat.StatSpellCrit]: 0.34,\n\t\t\t},\n\t\t\t{\n\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 3.1,\n\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 1.79,\n\t\t\t},\n\t\t),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.UnholyDualWieldTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultUnholyOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tswiftRetribution: true,\n\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\ticyTalons: true,\n\t\t\tabominationsMight: true,\n\t\t\tleaderOfThePack: TristateEffect.TristateEffectRegular,\n\t\t\tsanctifiedRetribution: true,\n\t\t\tbloodlust: true,\n\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\n\t\t\tstoneskinTotem: TristateEffect.TristateEffectImproved,\n\t\t\tmoonkinAura: TristateEffect.TristateEffectRegular,\n\t\t\twrathOfAirTotem: true,\n\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t\theroicPresence: false,\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tbloodFrenzy: true,\n\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\tsunderArmor: true,\n\t\t\tebonPlaguebringer: true,\n\t\t\tmangle: true,\n\t\t\theartOfTheCrusader: true,\n\t\t\tshadowMastery: true,\n\t\t}),\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecUnholyDeathKnight>): APLRotation => {\n\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\tif (numTargets > 1) {\n\t\t\treturn Presets.UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t} else {\n\t\t\tif (player.getEquippedItem(ItemSlot.ItemSlotMainHand)!.item.handType == HandType.HandTypeTwoHand) {\n\t\t\t\treturn Presets.UNHOLY_2H_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t} else {\n\t\t\t\treturn Presets.UNHOLY_DW_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t}\n\t\t}\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [],\n\tpetConsumeInputs: [],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [BuffDebuffInputs.SpellDamageDebuff, BuffDebuffInputs.StaminaBuff],\n\texcludeBuffDebuffInputs: [BuffDebuffInputs.AttackPowerDebuff, BuffDebuffInputs.DamageReductionPercentBuff, BuffDebuffInputs.MeleeAttackSpeedDebuff],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\t// DeathKnightInputs.StartingRunicPower(),\n\t\t\t// DeathKnightInputs.PetUptime(),\n\t\t\t// UnholyInputs.SelfUnholyFrenzy,\n\t\t\t// UnholyInputs.UseAMSInput,\n\t\t\t// UnholyInputs.AvgAMSSuccessRateInput,\n\t\t\t// UnholyInputs.AvgAMSHitInput,\n\n\t\t\t// OtherInputs.TankAssignment,\n\t\t\t// OtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\titemSwapSlots: [ItemSlot.ItemSlotMainHand, ItemSlot.ItemSlotOffHand],\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.UnholyDualWieldTalents, Presets.UnholyDualWieldSSTalents, Presets.Unholy2HTalents, Presets.UnholyAoeTalents],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.UNHOLY_DW_ROTATION_PRESET_DEFAULT, Presets.UNHOLY_2H_ROTATION_PRESET_DEFAULT, Presets.UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.P1_UNHOLY_DW_PRESET,\n\t\t\tPresets.P2_UNHOLY_DW_PRESET,\n\t\t\tPresets.P3_UNHOLY_DW_PRESET,\n\t\t\tPresets.P4_UNHOLY_DW_PRESET,\n\t\t\tPresets.P4_UNHOLY_2H_PRESET,\n\t\t\t// Not needed anymore just filling ui Space\n\t\t\t// Disabled on purpose\n\t\t\t//Presets.P1_FROSTSUBUNH_PRESET,\n\t\t\t//Presets.P1_FROST_PRE_BIS_PRESET,\n\t\t\t//Presets.PRERAID_UNHOLY_DW_PRESET,\n\t\t\t//Presets.PRERAID_UNHOLY_2H_PRESET,\n\t\t\t//Presets.P1_UNHOLY_2H_PRESET,\n\t\t],\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecUnholyDeathKnight,\n\t\t\ttalents: Presets.UnholyDualWieldTalents.data,\n\t\t\tspecOptions: Presets.DefaultUnholyOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_UNHOLY_DW_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_UNHOLY_DW_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t},\n\t],\n});\n\nexport class UnholyDeathKnightSimUI extends IndividualSimUI<Spec.SpecUnholyDeathKnight> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecUnholyDeathKnight>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["PresetUtils.makePresetGear","P1Uh2hGear","P4_UNHOLY_2H_PRESET","P4Uh2hGear","PreraidUhDwGear","P1_UNHOLY_DW_PRESET","P1UhDwGear","P2_UNHOLY_DW_PRESET","P2UhDwGear","P3_UNHOLY_DW_PRESET","P3UhDwGear","P4_UNHOLY_DW_PRESET","P4UhDwGear","UNHOLY_DW_ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","UhDwSsApl","UNHOLY_2H_ROTATION_PRESET_DEFAULT","Uh2hSsApl","UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT","UhDndAoeApl","UnholyDualWieldTalents","name","data","SavedTalents","create","UnholyDualWieldSSTalents","Unholy2HTalents","UnholyAoeTalents","DefaultUnholyOptions","UnholyDeathKnight_Options","classOptions","startingRunicPower","petUptime","unholyFrenzyTarget","UnitReference","DefaultConsumes","Consumes","flask","Flask","FlaskOfEndlessRage","food","Food","FoodDragonfinFilet","defaultPotion","Potions","PotionOfSpeed","petFood","PetFood","PetFoodSpicedMammothTreats","prepopPotion","thermalSapper","fillerExplosive","Explosive","ExplosiveSaroniteBomb","SPEC_CONFIG","registerSpecConfig","Spec","SpecUnholyDeathKnight","cssClass","cssScheme","PlayerClasses","getCssClass","DeathKnight","knownIssues","epStats","Stat","StatStrength","StatArmor","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmorPenetration","StatSpellHit","StatSpellCrit","StatSpellHaste","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","defaults","gear","Presets.P2_UNHOLY_DW_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.UnholyDualWieldTalents","specOptions","Presets.DefaultUnholyOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","swiftRetribution","strengthOfEarthTotem","icyTalons","abominationsMight","leaderOfThePack","TristateEffectRegular","sanctifiedRetribution","bloodlust","devotionAura","stoneskinTotem","moonkinAura","wrathOfAirTotem","powerWordFortitude","partyBuffs","PartyBuffs","heroicPresence","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","debuffs","Debuffs","bloodFrenzy","faerieFire","sunderArmor","ebonPlaguebringer","mangle","heartOfTheCrusader","shadowMastery","autoRotation","player","sim","encounter","targets","length","Presets.UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT","rotation","getEquippedItem","ItemSlot","ItemSlotMainHand","item","handType","HandType","HandTypeTwoHand","Presets.UNHOLY_2H_ROTATION_PRESET_DEFAULT","Presets.UNHOLY_DW_ROTATION_PRESET_DEFAULT","playerIconInputs","petConsumeInputs","includeBuffDebuffInputs","BuffDebuffInputs.SpellDamageDebuff","BuffDebuffInputs.StaminaBuff","excludeBuffDebuffInputs","BuffDebuffInputs.AttackPowerDebuff","BuffDebuffInputs.DamageReductionPercentBuff","BuffDebuffInputs.MeleeAttackSpeedDebuff","otherInputs","inputs","itemSwapSlots","ItemSlotOffHand","encounterPicker","showExecuteProportion","presets","Presets.UnholyDualWieldSSTalents","Presets.Unholy2HTalents","Presets.UnholyAoeTalents","rotations","Presets.P1_UNHOLY_DW_PRESET","Presets.P3_UNHOLY_DW_PRESET","Presets.P4_UNHOLY_DW_PRESET","Presets.P4_UNHOLY_2H_PRESET","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceTroll","defaultGear","otherDefaults","UnholyDeathKnightSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}